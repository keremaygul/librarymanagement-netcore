// <auto-generated />
using System;
using LibraryManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250101135035_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("LibraryManagement.Core.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableCopies")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CopyCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Yaşar Kemal",
                            AvailableCopies = 5,
                            Category = "Roman",
                            CopyCount = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 520, DateTimeKind.Local).AddTicks(9874),
                            Description = "Türk edebiyatının en önemli eserlerinden biri olan İnce Memed, bir eşkıya destanı.",
                            ISBN = "9789750719387",
                            PublicationYear = 2019,
                            Publisher = "Yapı Kredi Yayınları",
                            Title = "İnce Memed"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Oğuz Atay",
                            AvailableCopies = 3,
                            Category = "Roman",
                            CopyCount = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(4624),
                            Description = "Modern Türk edebiyatının başyapıtlarından biri olarak kabul edilen Tutunamayanlar.",
                            ISBN = "9789750738609",
                            PublicationYear = 2020,
                            Publisher = "İletişim Yayınları",
                            Title = "Tutunamayanlar"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Sabahattin Ali",
                            AvailableCopies = 4,
                            Category = "Roman",
                            CopyCount = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(4638),
                            Description = "Sabahattin Ali'nin en çok okunan romanlarından biri olan Kürk Mantolu Madonna.",
                            ISBN = "9789750726477",
                            PublicationYear = 2018,
                            Publisher = "Yapı Kredi Yayınları",
                            Title = "Kürk Mantolu Madonna"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jose Mauro De Vasconcelos",
                            AvailableCopies = 6,
                            Category = "Roman",
                            CopyCount = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(4640),
                            Description = "Brezilyalı yazar Jose Mauro de Vasconcelos'un dünya klasikleri arasına girmiş eseri.",
                            ISBN = "9789750740121",
                            PublicationYear = 2019,
                            Publisher = "Can Yayınları",
                            Title = "Şeker Portakalı"
                        },
                        new
                        {
                            Id = 5,
                            Author = "John Steinbeck",
                            AvailableCopies = 4,
                            Category = "Roman",
                            CopyCount = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(4642),
                            Description = "Nobel ödüllü yazar John Steinbeck'in en önemli eserlerinden biri.",
                            ISBN = "9789750739859",
                            PublicationYear = 2020,
                            Publisher = "Sel Yayıncılık",
                            Title = "Fareler ve İnsanlar"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.BookLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExtensionCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("BookLoans");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kadıköy, İstanbul",
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9504),
                            Email = "ahmet.yilmaz@email.com",
                            FirstName = "Ahmet",
                            IsActive = true,
                            LastName = "Yılmaz",
                            MembershipDate = new DateTime(2024, 7, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9136),
                            Phone = "05301234567"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Çankaya, Ankara",
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9513),
                            Email = "ayse.demir@email.com",
                            FirstName = "Ayşe",
                            IsActive = true,
                            LastName = "Demir",
                            MembershipDate = new DateTime(2024, 9, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9509),
                            Phone = "05412345678"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Karşıyaka, İzmir",
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9516),
                            Email = "mehmet.kaya@email.com",
                            FirstName = "Mehmet",
                            IsActive = true,
                            LastName = "Kaya",
                            MembershipDate = new DateTime(2024, 10, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9515),
                            Phone = "05523456789"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Nilüfer, Bursa",
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9518),
                            Email = "zeynep.sahin@email.com",
                            FirstName = "Zeynep",
                            IsActive = true,
                            LastName = "Şahin",
                            MembershipDate = new DateTime(2024, 11, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9517),
                            Phone = "05334567890"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Muratpaşa, Antalya",
                            CreatedAt = new DateTime(2025, 1, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9520),
                            Email = "mustafa.ozturk@email.com",
                            FirstName = "Mustafa",
                            IsActive = true,
                            LastName = "Öztürk",
                            MembershipDate = new DateTime(2024, 12, 1, 16, 50, 35, 522, DateTimeKind.Local).AddTicks(9519),
                            Phone = "05445678901"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.BookLoan", b =>
                {
                    b.HasOne("LibraryManagement.Core.Entities.Book", "Book")
                        .WithMany("BookLoans")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Core.Entities.Member", "Member")
                        .WithMany("BookLoans")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Book", b =>
                {
                    b.Navigation("BookLoans");
                });

            modelBuilder.Entity("LibraryManagement.Core.Entities.Member", b =>
                {
                    b.Navigation("BookLoans");
                });
#pragma warning restore 612, 618
        }
    }
}
